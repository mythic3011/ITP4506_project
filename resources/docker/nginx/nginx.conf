user www-data;
worker_processes auto;
pid /run/nginx.pid;
worker_rlimit_nofile 65535;

# Load modules
include /etc/nginx/modules-enabled/*.conf;

events {
    multi_accept on;
    worker_connections 65535;
}

http {
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    log_not_found off;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    client_max_body_size 16M;

    # MIME
    include mime.types;
    default_type application/octet-stream;

    # Log Format
    log_format cloudflare '$proxy_forwarded_elem - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $http_cf_ray $http_cf_connecting_ip $http_x_forwarded_for $http_x_forwarded_proto $http_true_client_ip $http_cf_ipcountry $http_cf_visitor $http_cdn_loop';
    log_format direct_access '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';

    # Logging
    access_log off;
    error_log /var/log/nginx/error.log warn;

    # Limits
    limit_req_log_level warn;
    limit_req_zone $binary_remote_addr zone=flood:10m rate=10r/s;

    # SSL
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Mozilla Modern configuration
    ssl_protocols TLSv1.3;

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        "" close;
    }

    map $http_cf_connecting_ip $proxy_forwarded_elem {
        default "for=$http_cf_connecting_ip";
    }

    # Simplified forwarded header handling
    map $http_forwarded $proxy_add_forwarded {
        default "$http_forwarded, $proxy_forwarded_elem";
        "" "$proxy_forwarded_elem";
    }

    # Block bad user agents
    map $http_user_agent $badagent {
        default 0;
        ~*malicious 1;
        ~*backdoor 1;
        ~*netcrawler 1;
    }

    # private page
#     map $request_uri $is_page_request {
#             ~^/page/ 1;
#             default 0;
#         }

    # Error pages
    error_page 404 /error/404.html;
    error_page 403 /error/403.html;
    error_page 500 502 503 504 /error/500.html;

    # Default server
    server {
        listen 80 default_server;
        server_name _;
        root /var/www/html;

        # Logging
        access_log /var/log/nginx/direct_access.log direct_access buffer=512k flush=1m;
        error_log /var/log/nginx/direct_access.error.log warn;

   # Error pages
    error_page 404 /error/404.html;
    error_page 500 502 503 504 /error/500.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

        location = error {
            root /var/www/html/error;
        }

        location / {
            try_files $uri $uri/ /index.php;
            index index.php;

        }

        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

#         location /page/*.html {
#             internal;
#         }
#
#         location /page/*/*.html {
#             internal;
#         }

    location /error {
        alias /var/www/html/error;
        internal;
    }

#     location /api {
#         proxy_pass http://api:8080;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

        include /etc/nginx/nginxconfig.io/letsencrypt.conf;
    }


    # Load configs
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*.conf;
}
